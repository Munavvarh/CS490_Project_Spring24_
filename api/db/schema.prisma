// Don't forget to tell Prisma about your edits to this file using
// `yarn rw prisma migrate dev` or `yarn rw prisma db push`.
// `migrate` is like committing while `push` is for prototyping.
// Read more about both here:
// https://www.prisma.io/docs/orm/prisma-migrate

datasource db {
  provider = "mysql"
  url      = "mysql://test:1234@localhost:3306/test"
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.
// TODO: Please remove the following example:
model User {
  id                  Int                 @id @default(autoincrement())
  name                String?
  email               String              @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  translationHistories TranslationHistory[]
}


model Feedback {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  score      Int
  email      String?
  review     String?
  codeInput  String?
  codeOutput String?
}

model TranslationHistory {
  id            Int      @id @default(autoincrement())
  userId        Int      // Links to the User model's ID
  originalCode  String
  translatedCode String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  status        String   // Could be an enum if you have predefined statuses
  user          User     @relation(fields: [userId], references: [id])
}

